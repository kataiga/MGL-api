j'utilise rails en mode api je n'ai donc pas de system de vue intégré, je fais mes test avec des requetes

api
    comme j'utilise rails en api, j'ai du définir dans mes routes le chemin api/v1
    ce qui permet pour les utulisateur de l'api que si il y a des modification des chamgement leur utilisation ne soit pas impacter
    car si de gros changement ont lieux il se dérouleront sur la v2 et donc la route sera api/v2, ce qui fait que la V1 fonctionera toujours de la méme manière
    j'ai du donc aussi déplacer le controller de "game" dans le dossier api/v1/ et aussi définir les diferents module a l'interrieur, ils permet d'avoir des class du
    même nom sans qu'ils interfer entre eux par expemple en cas de plusieurs verssion d'api la class game de l'api/v1 n'interferera pas sur api/v2 car ils sont dans 
    des modules

controller
    application 
        j'ai défini une gestion d"erreur qui sera accecible a toute les class qui hérite de application, ce qui permet d'éviter d'avoir des répetition de code pour 
        des erreurs qui peuvent arriver sur different controller, je l'effectue avec "rescue_from ActiveRecord::RecordNotDestroyed, with: :not_destroyed" 
        quand rails renvois RecordNotDestroyed j'utilisa la method not_destroyed qui est défini en private dans l'application controller
    
    game
        ici je défini la logique pour la gestion des jeux, je renvois les données sous format json 

        la fonction index sert a envoyer toutes les données

        create me permet d'ajouter une entrée dans ma bdd j'utilise un if else pour verifier si l'enregistrement c'est correctement effectuer, si c'est le cas je 
        renvois l'entré sous format json sinon je renvois les erreurs, pour les status code plutot que de mettre directement les valeur j'utilise la fonction intégré a rails qui me permet 
        de simplement mettre :created, :unprocessable_entity, et qui renvera les bon status code, ca facilite la lisibilité on sais tout de suite ce qui est renvoyer

        la fonction destroy est basic on cherche une instance de l'objet game avec l'id comme parametre et on le delet de la bdd, puis on renvois le header 204 avec 
        head :no_content

models
    game
        j'ai définis les validation qui permette de faire le traitement de données et verifier qu'elle soit conforme a ce que je veux
